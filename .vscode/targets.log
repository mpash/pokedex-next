make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Wed Jul 20 15:03:27 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
define TF_SHELL_ALIASES
-='cd -'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -1'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_='sudo '
a='php artisan'
ace='no ace'
afind='ack -il'
am='a migrate'
amf='a migrate:fresh'
amm='a make:model'
ammm='amm --migration'
arl='a route:list'
arlc='arl --compact'
at='a tinker'
av='a --version'
b=brew
bi='b install'
c=composer
cast='echo '\''Aye Aye Captain! Setting sails...'\'' &&             docker start mariadb mailcatcher keydb'
ccp='composer create-project'
cdo='composer dump-autoload -o'
cdu='composer dump-autoload'
centre-prod='daba -k mysql -s mysql-bushel01-prod -d centre -r plus'
centre-r0='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r0_app_data -r plus'
centre-r1='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r1_app_data -r plus'
centre-r2='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r2_app_data -r plus'
centre-r3='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r3_app_data -r plus'
centre-r4='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r4_app_data -r plus'
centre-r5='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r5_app_data -r plus'
centre-r6='daba -k mysql -s mysql-bushel01-dev -d bushel_platform_centre_r6_app_data -r plus'
centre-uat='daba -k mysql -s mysql-bushel01-uat -d centre -r plus'
cget='curl -s https://getcomposer.org/installer | php'
cgr='composer global require'
cgrm='composer global remove'
cgu='composer global update'
ci='composer install'
co='composer outdated'
cod='composer outdated --direct'
cr='composer require'
crm='composer remove'
cs='vendor/bin/php-cs-fixer fix --config=.php_cs.dist.php -v --using-cache=no --allow-risky=yes'
csu='composer self-update'
cu='composer update'
cuh='composer update --working-dir=$(composer config -g home)'
d=docker
da='daba --vpn-pin=$( security find-generic-password -a ${USER} -s pritunl-pin -w )'
dock='echo '\''Aye Captain, pulling into port...'\'' &&             docker stop mariadb mailcatcher keydb'
egrep='egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
f=fuck
fgrep='fgrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
g=git
ga='git add'
gaa='git add . && git status'
gam='git am'
gama='git am --abort'
gamc='git am --continue'
gams='git am --skip'
gamscp='git am --show-current-patch'
gap='git apply'
gapa='git add --patch'
gapt='git apply --3way'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch -d 2>/dev/null'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcas='git commit -a -s'
gcasm='git commit -a -s -m'
gcb='git checkout -b'
gcd='git checkout $(git_develop_branch)'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout $(git_main_branch)'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcor='git checkout --recurse-submodules'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gcss='git commit -S -s'
gcssm='git commit -S -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdup='git diff @{upstream}'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune --jobs=10'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github $(git_main_branch):svntrunk'
gk='\gitk --all --branches &!'
gke='\gitk --all $(git log -g --pretty=%h) &!'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glod='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
glods='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'
glola='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --all'
glols='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --stat'
glp=_git_log_prettily
glum='git pull upstream $(git_main_branch)'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/$(git_main_branch)'
gmtl='git mergetool --no-prompt'
gmtlvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/$(git_main_branch)'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpr='git pull --rebase'
gpristine='git reset --hard && git clean -dffx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase $(git_develop_branch)'
grbi='git rebase -i'
grbm='git rebase $(git_main_branch)'
grbo='git rebase --onto'
grbom='git rebase origin/$(git_main_branch)'
grbs='git rebase --skip'
grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grst='git restore --staged'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gstu='gsta --include-untracked'
gsu='git submodule update'
gsw='git switch'
gswc='git switch -c'
gswd='git switch $(git_develop_branch)'
gswm='git switch $(git_main_branch)'
gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupom='git pull --rebase origin $(git_main_branch)'
gupomi='git pull --rebase=interactive origin $(git_main_branch)'
gupv='git pull --rebase -v'
 
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
history=omz_history
i=idea
ide='a ide-helper:generate && a ide-helper:models --nowrite'
intel='arch -x86_64'
l='ls -lah'
la='ls -lAh'
ll='ls -lh'
ls='ls -G'
lsa='ls -lah'
m=mycli
md='mkdir -p'
n=npm
nb='n build'
nd='n dev'
ng='npm install --global'
ni='n i'
nid='ni -d'
no=node
np='n prod'
nps=./node_modules/nps/dist/bin/nps.js
ns='n start'
nu='n update'
nup='n upgrade'
nw='n watch'
p=pnpm
pb='p build'
pd='p dev'
pi='p i'
pid='pi -D'
pig='pi -g'
pp='p prod'
pritunl-client=/Applications/Pritunl.app/Contents/Resources/pritunl-client
ps='p start'
pu='p update'
pup='p upgrade'
pw='p watch'
px='p dlx'
python=python3
q=exit
rd=rmdir
rmnm='rm -rf node_modules'
rr='. ~/.zshrc'
run-help=man
rw='yarn rw'
sa='sail artisan'
sail='[ -f sail ] && bash sail || bash vendor/bin/sail'
t=tmux
ta='t a'
taw='t a -t web'
tnw='t new -s web'
v=valet
ver=vercel
verp='ver --production'
vf='v forget'
vi='v install'
vl='v link'
vlo='v log'
vls='v links'
vo='v open'
vp='v park'
vs='v secure'
vu='v use'
vu74='vu php@7.4'
vu80='vu php@8.0'
vu81='vu php@8.1'
vul='v unlink'
vun='v uninstall'
vunf='vun --force'
vus='v unsecure'
weather='curl wttr.in | less'
which-command=whence
y=yarn
ya='y add'
yad='ya -D'
yb='y build'
yd='y dev'
yga='y global add'
yp='y prod'
ys='y start'
yu='y update'
yup='y upgrade'
yw='y watch'
endef
# environment
NVM_INC = /Users/mpash/.nvm/versions/node/v14.19.3/include/node
# environment
vstsMavenAccessToken = n74zg45ykloffjg4bhoksmzyvt6ux4nwmahfpptzaotn3zcx6huq
# environment
TF_SHELL = zsh
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/mpash/Code/GitHub/pokedex-next
# makefile
SHELL = /bin/sh
# environment
FZF_DEFAULT_COMMAND = rg --files --hidden --glob "!.git/*"
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
TF_ALIAS = fuck
# environment
AUTOJUMP_SOURCED = 1
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# environment
P9K_SSH = 0
# environment
VSCODE_CWD = /Users/mpash/Code/GitHub/pokedex-next
# environment
PATH = /Users/mpash/bin:/Users/mpash/.bun/bin:/Users/mpash/Library/pnpm:/opt/jetbrains/bin:/opt/jetbrains/bin:/Users/mpash/.nvm/versions/node/v14.19.3/bin:/opt/bin:/Users/mpash/bin:/usr/local/bin:/Users/mpash/bin:/Users/mpash/.bun/bin:/Users/mpash/Library/pnpm:/opt/jetbrains/bin:/opt/jetbrains/bin:/Users/mpash/.nvm/versions/node/v14.19.3/bin:/opt/bin:/Users/mpash/bin:/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin:/Users/mitch/.composer/vendor/bin:/Users/mpash/.composer/vendor/bin:/Users/mitch/.composer/vendor/bin:/Users/mpash/.composer/vendor/bin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
DOCKER_CONTAINERS = mariadb mailcatcher keydb
# environment
PNPM_HOME = /Users/mpash/Library/pnpm
# environment
NVM_BIN = /Users/mpash/.nvm/versions/node/v14.19.3/bin
# environment
LaunchInstanceID = 3D4D3A3B-D5D0-4786-8BCC-DFAD68C9DC4B
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /Users/mpash/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock
# automatic
%F = $(notdir $%)
# environment
PWD = /Users/mpash/Code/GitHub/pokedex-next
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
FORTAWESOME_TOKEN = 5491F841-6503-4381-B871-08492F9EE440
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /Users/mpash/.nvm/versions/node/v14.19.3/share/man:/opt/homebrew/share/man::
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/mpash
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /Users/mpash/Library/Application Support/Code/CachedData/3b889b090b5ad5793f524b5d1d39fda662b96a2a
# environment
LOGNAME = mpash
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = -q
# environment
PYTHONIOENCODING = 
# environment
ZSH = /Users/mpash/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# environment
LC_TERMINAL = iTerm2
# environment
SHLVL = 3
# default
MAKE_VERSION := 3.81
# environment
USER = mpash
# makefile
.DEFAULT_GOAL := build
# default
MAKECMDGOALS := all
# environment
TERM_SESSION_ID = w0t0p1:5879E553-5141-4663-923A-9CD54FD15779
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# environment
TERM_PROGRAM = iTerm.app
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/c3/lsctyrs12s37g91wty596rt40000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/mpash/Library/Application Support/Code/1.69.2-main.sock
# environment
MallocNanoZone = 0
# environment
BUN_INSTALL = /Users/mpash/.bun
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# environment
ORY_SDK_URL = https://youthful-bassi-rp1njqs4mh.projects.oryapis.com
# environment
TERM_PROGRAM_VERSION = 3.4.16
# environment
NVM_DIR = /Users/mpash/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.8583906.8583912.3CE64260-CDCA-4C61-B46C-28024B0F1A4A
# environment
LC_TERMINAL_VERSION = 3.4.16
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
ITERM_SESSION_ID = w0t0p1:5879E553-5141-4663-923A-9CD54FD15779
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
COLORFGBG = 15;0
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
ITERM_PROFILE = Default
# environment
PAGER = less
# environment
LC_ALL = C
# environment
SECURITYSESSIONID = 186b4
# environment
P9K_TTY = old
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
MAKELEVEL := 0
# environment
AUTOJUMP_ERROR_PATH = /Users/mpash/Library/autojump/errors.log
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
_P9K_TTY = /dev/ttys000
# environment
VSCODE_PID = 38294
# environment
VAULT_ADDR = https://vault.bushelops.com
# variable set hash-table stats:
# Load=101/1024=10%, Rehash=0, Collisions=7/124=6%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777231, inode 8505625): 33 files, no impossibilities.

# 33 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-19 05:49:36
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

start: build
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 5):
	docker run -dt -p 3000:3000 app
	

build:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 2):
 
	docker build . -t app
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=6/1024=1%, Rehash=0, Collisions=0/19=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Wed Jul 20 15:03:27 2022

 
